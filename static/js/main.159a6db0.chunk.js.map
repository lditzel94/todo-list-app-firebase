{"version":3,"sources":["app/components/Header/Header.jsx","app/components/AppTitle/AppTitle.jsx","app/components/TaskItem/TaskItem.jsx","app/components/TaskList/TasksList.styles.js","app/components/TaskList/TaskList.jsx","app/App.jsx","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","classes","className","AppBar","position","Toolbar","Typography","variant","Button","color","textAlign","AppTitle","TaskItem","data","changeStatus","ListItem","dense","button","onClick","id","completed","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","ListItemText","primary","text","form","width","list","marginTop","backgroundColor","palette","background","paper","TaskList","useState","inputValue","setInputValue","tasks","setTasks","taskId","newStatus","updatedTasks","map","task","Container","maxWidth","TextField","fullWidth","label","value","onKeyPress","event","key","preventDefault","console","log","prev","length","target","handleKeyPress","undefined","onChange","List","index","App","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.159a6db0.chunk.js","sourcesContent":["import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}))\r\n\r\nexport default function Header() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            To do App\r\n          </Typography>\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { makeStyles, Typography } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    textAlign: 'center',\r\n  },\r\n}))\r\n\r\nexport default function AppTitle() {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <>\r\n      <Typography color={'primary'} className={classes.title} variant={'h1'}>\r\n        TO DO APP\r\n      </Typography>\r\n      <Typography variant={'subtitle1'} className={classes.title}>\r\n        Hit enter to insert new tasks\r\n      </Typography>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {\r\n  ListItem,\r\n  ListItemIcon,\r\n  Checkbox,\r\n  ListItemText,\r\n} from '@material-ui/core'\r\n\r\nexport default function TaskItem({ data, changeStatus }) {\r\n  function handleToggleCheck() {\r\n    changeStatus(data.id, !data.completed)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ListItem dense button onClick={handleToggleCheck}>\r\n        <ListItemIcon>\r\n          <Checkbox\r\n            edge=\"start\"\r\n            checked={data.completed}\r\n            tabIndex={-1}\r\n            disableRipple\r\n          />\r\n        </ListItemIcon>\r\n        <ListItemText primary={data.text} />\r\n      </ListItem>\r\n    </>\r\n  )\r\n}\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: '100%',\r\n  },\r\n  list: {\r\n    width: '100%',\r\n    marginTop: '1em',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}))\r\n","import React, { useState } from 'react'\r\nimport { TextField, List, Container } from '@material-ui/core'\r\nimport AppTitle from '../AppTitle/AppTitle'\r\nimport TaskItem from '../TaskItem/TaskItem'\r\nimport { useStyles } from './TasksList.styles'\r\n\r\nexport default function TaskList() {\r\n  const classes = useStyles()\r\n  const [inputValue, setInputValue] = useState('')\r\n  const [tasks, setTasks] = useState([\r\n    {\r\n      id: 1,\r\n      completed: true,\r\n      text: 'Task 1',\r\n    },\r\n    {\r\n      id: 2,\r\n      completed: false,\r\n      text: 'Task 2',\r\n    },\r\n    {\r\n      id: 3,\r\n      completed: false,\r\n      text: 'Task 3',\r\n    },\r\n  ])\r\n\r\n  function showTaskList() {\r\n    return tasks.map((task, index) => (\r\n      <TaskItem key={index} data={task} changeStatus={changeStatus} />\r\n    ))\r\n  }\r\n\r\n  function handleKeyPress(event) {\r\n    event.preventDefault()\r\n    console.log(`Pressed keyCode ${event.key}`)\r\n\r\n    setTasks((prev) => [\r\n      ...prev,\r\n      { id: tasks.length + 1, completed: false, text: event.target.value },\r\n    ])\r\n    setInputValue('')\r\n  }\r\n\r\n  function changeStatus(taskId, newStatus) {\r\n    const updatedTasks = tasks.map((task) =>\r\n      task.id === taskId ? { ...task, completed: newStatus } : task\r\n    )\r\n    setTasks(updatedTasks)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"md\">\r\n        <AppTitle />\r\n        <TextField\r\n          fullWidth\r\n          id=\"outlined-basic\"\r\n          label=\"New task\"\r\n          variant=\"outlined\"\r\n          value={inputValue}\r\n          onKeyPress={(event) =>\r\n            event.key === 'Enter' ? handleKeyPress(event) : undefined\r\n          }\r\n          onChange={(event) => setInputValue(event.target.value)}\r\n        />\r\n\r\n        <List className={classes.list}>{showTaskList()}</List>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { CssBaseline } from '@material-ui/core'\r\nimport Header from './components/Header/Header'\r\nimport TaskList from './components/TaskList/TaskList'\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Header />\r\n      <TaskList />\r\n    </>\r\n  )\r\n}\r\n","import ReactDOM from 'react-dom'\r\nimport App from './app/App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}